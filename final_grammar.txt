program moduleDeclara0tions otherModules driverModule otherModules
moduleDeclarations moduleDeclaration moduleDeclarations
moduleDeclarations e
moduleDeclaration DECLARE MODULE ID SEMICOL
otherModules module otherModules
otherModules e
driverModule DRIVERDEF DRIVER PROGRAM DRIVERENDDEF moduleDef
module DEF MODULE ID ENDDEF TAKES INPUT SQBO input_plist SQBC SEMICOL ret moduleDef
ret RETURNS SQBO output_plist SQBC SEMICOL
ret e
input_plist ID COLON dataType n1
n1 COMMA ID COLON dataType n1
n1 e
output_plist ID COLON type n2
n2 COMMA ID COLON type n2
n2 e
dataType INTEGER
dataType REAL
dataType BOOLEAN
dataType ARRAY SQBO range_arrays SQBC OF type
range_arrays index_arr RANGEOP index_arr
moduleDef START statements END
statements statement statements
statements e
statement ioStmt
statement simpleStmt
statement declareStmt
statement conditionalStmt
statement iterativeStmt
ioStmt GET_VALUE BO ID BC SEMICOL
ioStmt PRINT BO var_print BC SEMICOL
var_print boolConst
var_print ID p1
var_print NUM
var_print RNUM
p1 SQBO index_arr SQBC
p1 e
simpleStmt assignmentStmt
simpleStmt moduleReuseStmt
assignmentStmt ID whichStmt
whichStmt lvalueIDStmt
whichStmt lvalueARRStmt
lvalueIDStmt ASSIGNOP expression SEMICOL
lvalueARRStmt SQBO element_index_with_expressions SQBC ASSIGNOP expression SEMICOL
index_arr sign new_index
moduleReuseStmt optional USE MODULE ID WITH PARAMETERS actual_para_list SEMICOL
optional SQBO idList SQBC ASSIGNOP
optional e
actual_para_list list_var n_13
n_13 COMMA list_var
n_13 e
list_var NUM
list_var RNUM
list_var boolConst
list_var ID n_12
n_12 SQBO element_index_with_expressions
n_12 e
expression arithmeticOrBooleanExpr
expression uop
uop unary_op new_NT
new_NT BO arithmeticExpr BC
new_NT var_id_num
var_id_num ID
var_id_num NUM
var_id_num RNUM
unary_op PLUS
unary_op MINUS
arithmeticOrBooleanExpr anyTerm n7
n7 logicalOp anyTerm n7
n7 e
anyTerm arithmeticExpr n8
anyTerm boolConst
n8 relationalOp arithmeticExpr
n8 e
arithmeticExpr term n4
n4 op1 term n4
n4 e
term factor n5
n5 op2 factor n5
n5 e
factor BO arithmeticOrBooleanExpr BC
factor NUM
factor RNUM
factor boolConst
factor ID n_11
n_11 SQBO element_index_with_expressions SQBC
n_11 e
element_index_with_expressions sign n_10
element_index_with_expressions arrExpr
n_10 new_index
n_10 BO arrExpr BC
arrExpr arrTerm arr_n4
arr_n4 op1 arrTerm arr_n4
arr_n4 e
arrTerm arrFactor arr_n5
arr_n5 op2 arrFactor arr_n5
arr_n5 e
arrFactor ID
arrFactor NUM
arrFactor boolConst
arrFactor BO arrExpr BC
boolConst TRUE
boolConst FALSE
op1 PLUS
op1 MINUS
op2 MUL
op2 DIV
logicalOp AND
logicalOp OR
relationalOp LT
relationalOp LE
relationalOp GT
relationalOp GE
relationalOp EQ
relationalOp NE
declareStmt DECLARE idList COLON dataType SEMICOL
conditionalStmt SWITCH BO ID BC START caseStmts default END
caseStmts CASE value COLON statements BREAK SEMICOL n9
n9 CASE value COLON statements BREAK SEMICOL n9
n9 e
value NUM
value TRUE
value FALSE
default DEFAULT COLON statements BREAK SEMICOL
default e
iterativeStmt FOR BO ID IN range_for_loop BC START statements END
iterativeStmt WHILE BO arithmeticOrBooleanExpr BC START statements END
range_for_loop index_for_loop RANGEOP index_for_loop
index_for_loop sign_for_loop new_index_for_loop
new_index_for_loop NUM
new_index NUM
new_index ID
sign_for_loop PLUS
sign_for_loop MINUS
sign_for_loop e
type INTEGER
type REAL
type BOOLEAN
sign PLUS
sign MINUS
sign e
idList ID n3
n3 COMMA ID n3
n3 e